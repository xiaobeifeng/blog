//
//  NEUViewController.m
//  NEUFaceIDCardKit
//
//  Created by zhoujian on 2020/11/12.
//

#import "NEUViewController.h"
#import <WebKit/WebKit.h>
#import <MGFaceIDIDCardKit/MGFaceIDIDCardKit.h>
#import <MGFaceIDBaseKit/MGFaceIDBaseKit.h>

@interface NEUViewController ()<WKNavigationDelegate, WKScriptMessageHandler, WKUIDelegate>


@property(nonatomic, strong) WKWebView *webView;

// 进度条
@property (nonatomic, strong) UIProgressView *progressView;

@property (nonatomic, copy) WKWebViewConfiguration *configuration;

@end

@implementation NEUViewController

- (WKWebView *)webView {
    
    if (!_webView) {
        
        _webView = [[WKWebView alloc] initWithFrame:self.view.frame configuration:self.configuration];
        _webView.backgroundColor = [UIColor whiteColor];
        _webView.navigationDelegate = self;
        _webView.UIDelegate = self;
        _webView.allowsBackForwardNavigationGestures = YES;
        _webView.autoresizingMask = UIViewAutoresizingFlexibleHeight | UIViewAutoresizingFlexibleWidth;
        [self.view addSubview:_webView];
        
        // 添加 KVO 对进度监听
        [_webView addObserver:self forKeyPath:@"estimatedProgress" options:NSKeyValueObservingOptionNew context:nil];
    }
    
    return _webView;
    
}

- (WKWebViewConfiguration *)configuration {
    
    if (!_configuration) {
        
        _configuration = [[WKWebViewConfiguration alloc] init];
        _configuration.userContentController = [WKUserContentController new];
        [_configuration.userContentController addScriptMessageHandler:self name:@"killSelf"];
        // 用于图书馆扫码交互
        [_configuration.userContentController addScriptMessageHandler:self name:@"qrCodeRecognition"];
        // 用于刷脸功能交互
        [_configuration.userContentController addScriptMessageHandler:self name:@"requestNewToken"];
        // 用于身份证识别交互
        [_configuration.userContentController addScriptMessageHandler:self name:@"requestOcr"];
        // 用于获取pdf预览地址
        [_configuration.userContentController addScriptMessageHandler:self name:@"requestPdfUri"];
        [_configuration.userContentController addScriptMessageHandler:self name:@"user"];
        [_configuration.userContentController addScriptMessageHandler:self name:@"requestCommPay"];
        
    }
    
    return _configuration;
    
}

- (UIProgressView *)progressView{
    
    if (!_progressView) {
        
        _progressView = [UIProgressView new];
        
        _progressView.frame = CGRectMake(0, [self isIphoneX] ? 88.0f : 64.0f, [[UIScreen mainScreen] bounds].size.width, 2);
        _progressView.trackTintColor = [UIColor lightGrayColor];
        _progressView.tintColor = [UIColor greenColor];
        _progressView.transform = CGAffineTransformMakeScale(1.0f, 1.0f);
        [self.view addSubview:_progressView];
        
    }
    
    return _progressView;
}

// 判断是否为刘海屏
- (BOOL)isIphoneX {
    
    if (@available(iOS 11.0, *)) {
        if ([[UIApplication sharedApplication] delegate].window.safeAreaInsets.bottom > 0) {
            return YES;
        } else {
            return NO;
        }
        
    } else {
        return YES;
    }
    
}


- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc] initWithTitle:@"取消" style:UIBarButtonItemStylePlain target:self action:@selector(handleDismissEvent)];
    
    NSMutableURLRequest *request = [[NSMutableURLRequest alloc] initWithURL:[NSURL URLWithString:_path]];
    [self.webView loadRequest:request];
}

#pragma mark - Delegate 代理
// WKScriptMessageHandler
- (void)userContentController:(WKUserContentController *)userContentController didReceiveScriptMessage:(WKScriptMessage *)message {
    
    NSLog(@"%@", message);
    if ([message.name isEqualToString:@"requestOcr"]) {
        
        NSLog(@"%@", message.body);
        
        // 0 人像面, 1 国徽面
        [self startOCRWithShootPage:[message.body intValue]];
    }
    
}

- (void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary<NSString *,id> *)change context:(void *)context {
    if ([keyPath isEqualToString:@"estimatedProgress"]) {
        self.progressView.progress = _webView.estimatedProgress;
        if (self.progressView.progress == 1) {
            __weak typeof (self)weakSelf = self;
            [UIView animateWithDuration:0.25f delay:0.3f options:UIViewAnimationOptionCurveEaseOut animations:^{
                weakSelf.progressView.transform = CGAffineTransformMakeScale(1.0f, 1.0f);
            } completion:^(BOOL finished) {
                weakSelf.progressView.hidden = YES;
                
            }];
        }
    } else {
        [super observeValueForKeyPath:keyPath ofObject:object change:change context:context];
    }
}

// 开始加载
- (void)webView:(WKWebView *)webView didStartProvisionalNavigation:(WKNavigation *)navigation {
    
    NSLog(@"开始加载网页 %@", webView.URL.absoluteURL);
    // 开始加载网页时展示出progressView
    self.progressView.hidden = NO;
    // 开始加载网页的时候将progressView的Height恢复为1.5倍
    self.progressView.transform = CGAffineTransformMakeScale(1.0f, 1.0f);
    // 防止progressView被网页挡住
    [self.view bringSubviewToFront:self.progressView];
    
}


// 加载完成
- (void)webView:(WKWebView *)webView didFinishNavigation:(WKNavigation *)navigation {
    NSLog(@"加载完成");
    // 加载完成隐藏progressView
    self.progressView.hidden = YES;
    
}

// 加载失败
- (void)webView:(WKWebView *)webView didFailProvisionalNavigation:(WKNavigation *)navigation withError:(NSError *)error {
    
    NSLog(@"加载失败 %ld %@", (long)error.code, error);
    
    // 加载失败隐藏progressView
    self.progressView.hidden = YES;
    
}

- (UIView *)viewForZoomingInScrollView:(UIScrollView *)scrollView{
    return nil;
}

// 服务器返回200以外的状态码时，都调用请求失败的方法，从而可以做一些处理。
- (void)webView:(WKWebView *)webView decidePolicyForNavigationResponse:(WKNavigationResponse *)navigationResponse decisionHandler:(void (^)(WKNavigationResponsePolicy))decisionHandler {
    
    decisionHandler (WKNavigationResponsePolicyAllow);
    
}

// 信任自签名的https证书
- (void)webView:(WKWebView *)webView didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge completionHandler:(void (^)(NSURLSessionAuthChallengeDisposition disposition, NSURLCredential * _Nullable credential))completionHandler {
    
    if ([challenge.protectionSpace.authenticationMethod isEqualToString:NSURLAuthenticationMethodServerTrust]) {
        
        NSURLCredential *card = [[NSURLCredential alloc]initWithTrust:challenge.protectionSpace.serverTrust];
        
        completionHandler(NSURLSessionAuthChallengeUseCredential,card);
        
    }
}

- (void)startOCRWithShootPage:(NSInteger)shootPage {
    MGFaceIDIDCardErrorItem* errorItem;
    MGFaceIDIDCardManager* idcardManager = [[MGFaceIDIDCardManager alloc] initMGFaceIDIDCardManagerWithExtraData:nil error:&errorItem];
    if (errorItem && !idcardManager) {
        return;
    }
    MGFaceIDIDCardConfigItem* configItem = [[MGFaceIDIDCardConfigItem alloc] init];
    
    MGFaceIDIDCardShootPage faceIDIDCardShootPage;
    
    if (shootPage == 0) {
        // 人像面
        faceIDIDCardShootPage = MGFaceIDIDCardShootPagePortrait;
        
    } else {
        // 国徽面
        faceIDIDCardShootPage = MGFaceIDIDCardShootPageNationalEmblem;
    }
    
    [idcardManager startMGFaceIDIDCardDetect:self screenOrientation:MGFaceIDIDCardScreenOrientationVertical shootPage:faceIDIDCardShootPage detectConfig:configItem callback:^(MGFaceIDIDCardErrorItem *errorItem, MGFaceIDIDCardDetectItem *detectItem, NSDictionary *extraOutDataDict) {
        
        UIImage *cardImage = detectItem.idcardImageItem.idcardImage;
        NSData *cardData = UIImagePNGRepresentation(cardImage);
        NSString *cardDataBase64Encoding = [cardData base64EncodedStringWithOptions:NSDataBase64Encoding64CharacterLineLength];
        NSString *cardDataClearString = [self removeSpaceAndNewline:cardDataBase64Encoding];
        
        if ([cardDataBase64Encoding isKindOfClass:[NSNull class]] || cardDataBase64Encoding == nil || [cardDataBase64Encoding length] < 1) {
            return;
        }
        
        /// 传值给h5
        NSString *j2j = [NSString stringWithFormat:@"onResponseForNative('%@')", cardDataClearString];
        
        /// 执行JS
        [self.webView evaluateJavaScript:j2j completionHandler:^(id _Nullable response, NSError * _Nullable error) {
            
            NSLog(@"value: %@ error: %@", response, error);
            
        }];
        
        
    }];
    
}

- (NSString *)removeSpaceAndNewline:(NSString *)str {
    
    NSString *temp = [str stringByReplacingOccurrencesOfString:@"" withString:@""];
    temp = [temp stringByReplacingOccurrencesOfString:@"\r" withString:@""];
    temp = [temp stringByReplacingOccurrencesOfString:@"\n" withString:@""];
    temp = [temp stringByReplacingOccurrencesOfString:@"\\" withString:@""];
    return temp;
    
}

- (void)handleDismissEvent {
    [self dismissViewControllerAnimated:YES completion:nil];
}

@end
